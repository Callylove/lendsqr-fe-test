@import "../../styles/globals.scss";

// Base button styles
.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  border: 2px solid transparent;
  border-radius: 0.5rem;
  font-family: inherit;
  font-weight: 600;
  text-align: center;
  text-decoration: none;
  transition: all 0.2s ease;
  cursor: pointer;
  user-select: none;
  white-space: nowrap;
  overflow: hidden;
  line-height: 1;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary, 0.2);
  }

  &:focus-visible {
    outline: 2px solid $primary;
    outline-offset: 2px;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
    pointer-events: none;
  }
}

// Size variants
.xs {
  padding: 0.375rem 0.75rem;
  font-size: 0.75rem;
  min-height: 1.75rem;
  gap: 0.25rem;
}

.sm {
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  min-height: 2rem;
  gap: 0.375rem;
}

.md {
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  min-height: 2.5rem;
  gap: 0.5rem;
}

.lg {
  padding: 1rem 2rem;
  font-size: 1.125rem;
  min-height: 3rem;
  gap: 0.75rem;
}

.xl {
  padding: 1.25rem 2.5rem;
  font-size: 1.25rem;
  min-height: 3.5rem;
  gap: 0.75rem;
}

// Color variants
.primary {
  background: $primary;
  color: $white;
  border-color: $primary;

  &:hover:not(:disabled) {
    background: $primary-hover;
    border-color: $primary-hover;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba($primary, 0.3);
  }

  &:active {
    transform: translateY(0);
  }
}

.secondary {
  background: $secondary;
  color: $white;
  border-color: $secondary;

  &:hover:not(:disabled) {
    background: $secondary-hover;
    border-color: $secondary-hover;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba($secondary, 0.3);
  }
}

.tertiary {
  background: $gray-100;
  color: $gray-900;
  border-color: $gray-200;

  &:hover:not(:disabled) {
    background: $gray-200;
    border-color: $gray-300;
  }
}

.danger {
  background: $error;
  color: $white;
  border-color: $error;

  &:hover:not(:disabled) {
    background: $error-hover;
    border-color: $error-hover;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba($error, 0.3);
  }
}

.success {
  background: $success;
  color: $white;
  border-color: $success;

  &:hover:not(:disabled) {
    background: $success-hover;
    border-color: $success-hover;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba($success, 0.3);
  }
}

.warning {
  background: $warning;
  color: $white;
  border-color: $warning;

  &:hover:not(:disabled) {
    background: $warning-hover;
    border-color: $warning-hover;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba($warning, 0.3);
  }
}

.info {
  background: $info;
  color: $white;
  border-color: $info;

  &:hover:not(:disabled) {
    background: $info-hover;
    border-color: $info-hover;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba($info, 0.3);
  }
}

.ghost {
  background: transparent;
  color: $primary;
  border-color: transparent;

  &:hover:not(:disabled) {
    background: rgba($primary, 0.1);
    color: $primary-hover;
  }
}

.outline {
  background: transparent;
  color: $primary;
  border-color: $primary;

  &:hover:not(:disabled) {
    background: $primary;
    color: $white;
    transform: translateY(-1px);
  }
}

// Full width
.fullWidth {
  width: 100%;
}

// Loading state
.loading {
  color: transparent !important;

  .loadingSpinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 1rem;
    height: 1rem;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
}

.loadingText {
  margin-left: 0.5rem;
}

// Icons
.leftIcon {
  margin-right: 0.5rem;
  display: flex;
  align-items: center;
}

.rightIcon {
  margin-left: 0.5rem;
  display: flex;
  align-items: center;
}

// Button group
.buttonGroup {
  display: flex;

  &.horizontal {
    flex-direction: row;

    .button:not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-left: none;
    }

    .button:not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }

  &.vertical {
    flex-direction: column;

    .button:not(:first-child) {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      border-top: none;
    }

    .button:not(:last-child) {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }

  &.spacingNone {
    gap: 0;
  }

  &.spacingSm {
    gap: 0.25rem;
  }

  &.spacingMd {
    gap: 0.5rem;
  }

  &.spacingLg {
    gap: 1rem;
  }
}

// Animations
@keyframes spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

// Dark mode
@media (prefers-color-scheme: dark) {
  .tertiary {
    background: $gray-800;
    color: $gray-100;
    border-color: $gray-700;

    &:hover:not(:disabled) {
      background: $gray-700;
      border-color: $gray-600;
    }
  }

  .ghost {
    color: $primary-light;

    &:hover:not(:disabled) {
      background: rgba($primary-light, 0.1);
      color: $primary;
    }
  }

  .outline {
    color: $primary-light;
    border-color: $primary-light;

    &:hover:not(:disabled) {
      background: $primary-light;
      color: $gray-900;
    }
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .button {
    border-width: 3px;
  }
}

// Reduced motion
@media (prefers-reduced-motion: reduce) {
  .button {
    transition: none;

    &:hover:not(:disabled) {
      transform: none;
    }
  }

  .loadingSpinner {
    animation: none;
  }
}
